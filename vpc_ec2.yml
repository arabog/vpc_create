AWSTemplateFormatVersion: 2010-09-09
Description: This template deploys a VPC and EC2 Instance

Parameters:
  EnvironmentName:
    Description: A Vpc and a EC2
    Type: String

  VpcCIDR:
    Description: An IP range of CIDR
    Type: String
    Default: 10.0.0.0/16

  PublicSubnetCIDR:
    Description: A VPC IP subset range of CIDR
    Type: String
    Default: 10.0.0.0/24

  AMItoUse: 
    Description: AMI to use for the base image
    Type: String

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: 'true'
      EnableDnsSupport: true
      Tags: 
      - Key: Name 
        Value: !Sub ${EnvironmentName}

  PublicSubnet: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet


  # Amazon Linux EC2 Section
  SecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow http to our host
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} SecGrp
          
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref AMItoUse
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet: 
          - Ref: SecGrp
        SubnetId:
          Ref: "PublicSubnet"

      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd

      Tags: 
      - Key: Name 
        Value: !Sub ${EnvironmentName} Instance
